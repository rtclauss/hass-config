################################################################
## Packages / Alarms
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: "alarms"

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Alarm Panels
    ################################################

    ################################################
    ## Automations
    ################################################
    automation.meeting_wake_up:
      <<: *customize
      friendly_name: "Wake up for meeting"
      icon: mdi:briefcase

    automation.alarm_snooze:
      <<: *customize
      friendly_name: "Snooze"
      icon: mdi:alarm-snooze
    ################################################
    ## Binary Sensors
    ################################################

    ################################################
    ## Cameras
    ################################################

    ################################################
    ## Climate
    ################################################

    ################################################
    ## Covers
    ################################################

    ################################################
    ## Device Trackers
    ################################################

    ################################################
    ## Fans
    ############

    ################################################
    ## Frontend
    ################################################

    ################################################
    ## Groups
    ################################################

    ################################################
    ## Input Boolean
    ################################################

    ################################################
    ## Input Datetime
    ################################################
    input_datetime.next_work_meeting:
      <<: *customize
      friendly_name: "Next work meeting"
      icon: mdi:briefcase

    ################################################
    ## Input Numbers
    ################################################

    ################################################
    ## Input Select
    ################################################

    ################################################
    ## iOS
    ################################################

    ################################################
    ## Light
    ################################################

    ################################################
    ## Media Player
    ################################################

    ################################################
    ##  Notify
    ################################################

    ################################################
    ## Plant
    ################################################

    ################################################
    ## Proximity
    ################################################

    ################################################
    ## Scripts
    ################################################

    ################################################
    ## Sensors
    ################################################

    ################################################
    ## Switches
    ################################################

    ################################################
    ## Thermostats
    ################################################

    ################################################
    ## Weather
    ################################################

    ################################################
    ## Zone
    ################################################

########################
# Alarm Panel
########################
alarm_control_panel:

########################
## Automation
########################
automation:
  # - id: meeting_wake_up
  #   alias: meeting_wake_up
  #   trigger:
  #     - platform: time
  #       at: input_datetime.next_work_meeting
  #   condition:
  #     - condition: state
  #       entity_id: binary_sensor.workday_sensor
  #       state: "on"
  #     - condition: state
  #       entity_id: device_tracker.bayesian_zeke_home
  #       state: "home"
  #     - condition: state
  #       entity_id: input_boolean.special_meeting
  #       state: "on"
  #     # - condition: state
  #     #   entity_id: input_boolean.morning_routine
  #     #   ##TODO this could be on if guests are here...
  #     #   state: "off"
  #     # TODO Need to add condition that checks that I'm still in bed
  #     - condition: state
  #       entity_id: input_boolean.master_bed_occupancy
  #       state: "on"
  #       # enabled: false
  #   action:
  #     - service: input_boolean.turn_off
  #       entity_id: input_boolean.special_meeting
  #     - service: script.turn_on
  #       entity_id: script.wake_up_script
  #     - service: media_player.media_pause
  #       data:
  #         entity_id: media_player.bedroom
  #     - delay:
  #         seconds: 2
  #     - service: media_player.shuffle_set
  #       data:
  #         entity_id: media_player.bedroom
  #         shuffle: false
  #     - delay:
  #         seconds: 2
  #     - service: media_player.volume_set
  #       data:
  #         entity_id: media_player.bedroom
  #         volume_level: 0.2
  #     - delay:
  #         seconds: 2
  #     - service: media_player.play_media
  #       data:
  #         entity_id: media_player.bedroom
  #         media_content_type: music
  #         media_content_id: "https://open.spotify.com/track/2Mik4RyMTMGXscX9QGiDoX?si=TBH_9RezQA6d1Y1w5iahHQ" # Surfin' Bird

  - id: alarm_snooze
    alias: alarm_snooze
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: "00:15:8d:00:01:f2:a7:0a"
          command: "click"
          args:
            click_type: "single"
    condition:
      - condition: state
        entity_id: input_boolean.wakeup_alarm_firing
        state: "true"
      - condition: state
        entity_id: device_tracker.bayesian_zeke_home
        state: "home"
      # - condition: state
      #   entity_id: input_boolean.morning_routine
      #   ##TODO this could be on if guests are here...
      #   state: "off"
      # TODO Need to add condition that checks that I'm still in bed
      - condition: state
        entity_id: input_boolean.master_bed_occupancy
        state: "on"
        # enabled: false
    action:
      - service: script.turn_on
        entity_id: script.snooze_script

  - id: cancel_alarms
    alias: cancel_alarms
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: "00:15:8d:00:01:f2:a7:0a"
          command: "click"
          args:
            click_type: "double"
    action:
      - service: media_player.media_stop
        data:
          entity_id: media_player.bedroom

  - id: reset_lighting_on_start
    alias: reset_lighting_on_start
    trigger:
      - platform: homeassistant
        event: start
    action:
      - alias: "Turn on Adaptive Brightness for Bedroom"
        service: switch.turn_on
        entity_id:
          - switch.adaptive_lighting_adapt_brightness_owner_suite
          - switch.adaptive_lighting_adapt_color_owner_suite

  - id: toggle_owner_suite_light_automation
    alias: toggle_owner_suite_light_automation
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: "00:15:8d:00:01:f2:a7:0a"
          command: "click"
          args:
            click_type: "triple"
    action:
      - service: automation.toggle
        data:
          entity_id: automation.owner_suite_light_auto_on

  - id: turn_off_owner_suite_lamps_at_noon
    alias: turn_off_owner_suite_lamps_at_noon
    trigger:
      - platform: time
        at: "11:00:00"
    action:
      - service: light.turn_off
        data:
          entity_id: light.owner_suite_lamps

  # - id: weekday_alarm_wake_up
  #   alias: weekday_alarm_wake_up
  #   trigger:
  #     - platform: time
  #       at: input_datetime.weekday_alarm
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: state
  #         entity_id: binary_sensor.workday_sensor
  #         state: "on"
  #       - condition: state
  #         entity_id: device_tracker.bayesian_zeke_home
  #         state: "home"
  #       - condition: state
  #         entity_id: binary_sensor.planned_vacation_calendar
  #         state: "off"
  #         ## TODO, maybe this should be another automation to toggle
  #         ## weekday_alarm_on on and off depending on the calendar
  #       - condition: state
  #         entity_id: input_boolean.weekday_alarm_on
  #         state: "on"
  #       # - condition: state
  #       #   entity_id: input_boolean.morning_routine
  #       #   ##TODO this could be on if guests are here...
  #       #   state: "off"
  #       - condition: state
  #         entity_id: input_boolean.master_bed_occupancy
  #         state: "on"
  #         # enabled: false
  #   action:
  #     - parallel:
  #         - service: script.turn_on
  #           entity_id: script.wake_up_script
  #         - service: script.turn_on
  #           entity_id: script.sonos_mpr_news_wake_up

  # - id: weekend_alarm_wake_up
  #   alias: weekend_alarm_wake_up
  #   trigger:
  #     - platform: time
  #       at: input_datetime.weekend_alarm
  #   condition:
  #     - condition: state
  #       entity_id: binary_sensor.workday_sensor
  #       state: "off"
  #     - condition: state
  #       entity_id: device_tracker.bayesian_zeke_home
  #       state: "home"
  #     - condition: state
  #       entity_id: input_boolean.weekend_alarm_on
  #       state: "on"
  #     # - condition: state
  #     #   entity_id: input_boolean.morning_routine
  #     #   state: "off"
  #     # TODO Need to add condition that checks that I'm still in bed
  #     - condition: state
  #       entity_id: input_boolean.master_bed_occupancy
  #       state: "on"
  #       # enabled: false
  #   action:
  #     - parallel:
  #         - service: script.turn_on
  #           entity_id: script.wake_up_script
  #         - service: script.turn_on
  #           data:
  #             entity_id: >-
  #               {%- set script = ["script.sonos_the_current_wake_up",
  #                 "script.sonos_ksdj_wake_up"
  #                 ] -%}
  #               {% set pindex =  (range(0, (script | length - 1 ) )|random) -%}
  #               {{ script[pindex] }}

  - id: alarm_wake_up
    alias: alarm_wake_up
    trigger:
      - platform: time
        at: input_datetime.weekday_alarm
        id: weekday-alarm
      - platform: time
        at: input_datetime.weekend_alarm
        id: weekend-alarm
      - platform: time
        at: input_datetime.next_work_meeting
        id: meeting-alarm
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: device_tracker.bayesian_zeke_home
          state: "home"
        - condition: state
          entity_id: binary_sensor.planned_vacation_calendar
          state: "off"
        - condition: state
          entity_id: input_boolean.master_bed_occupancy
          state: "on"
          # enabled: false
    action:
      - choose:
          - conditions:
              # workday Morning Wake up
              - condition: trigger
                id: weekday-alarm
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "on"
              - condition: state
                entity_id: input_boolean.weekday_alarm_on
                state: "on"
            sequence:
              - parallel:
                  - service: script.turn_on
                    entity_id: script.wake_up_script
                  - service: script.turn_on
                    entity_id: script.sonos_mpr_news_wake_up
          - conditions:
              # Weekend alarm wakeup
              - condition: trigger
                id: weekend-alarm
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "off"
              - condition: state
                entity_id: input_boolean.weekend_alarm_on
                state: "on"
            sequence:
              - parallel:
                  - service: script.turn_on
                    entity_id: script.wake_up_script
                  - service: script.turn_on
                    data:
                      entity_id: >-
                        {%- set script = ["script.sonos_the_current_wake_up",
                          "script.sonos_ksdj_wake_up"
                          ] -%}
                        {% set pindex =  (range(0, (script | length - 1 ) )|random) -%}
                        {{ script[pindex] }}
          - conditions:
              # Meeting alarm wakeup
              - condition: trigger
                id: meeting-alarm
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "on"
              - condition: state
                entity_id: input_boolean.special_meeting
                state: "on"
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.special_meeting
              - service: script.turn_on
                entity_id: script.wake_up_script
              - service: media_player.media_pause
                data:
                  entity_id: media_player.bedroom
              - delay:
                  seconds: 2
              - service: media_player.shuffle_set
                data:
                  entity_id: media_player.bedroom
                  shuffle: false
              - delay:
                  seconds: 2
              - service: media_player.volume_set
                data:
                  entity_id: media_player.bedroom
                  volume_level: 0.2
              - delay:
                  seconds: 2
              - service: media_player.play_media
                data:
                  entity_id: media_player.bedroom
                  media_content_type: music
                  media_content_id: "https://open.spotify.com/track/2Mik4RyMTMGXscX9QGiDoX?si=TBH_9RezQA6d1Y1w5iahHQ" # Surfin' Bird

  - id: toggle_lava_lamp_workday
    alias: toggle_lava_lamp_workday
    trigger:
      - platform: template
        id: lava-lamp-off
        # don't let lamp run for longer than 10 hours
        value_template: >-
          {% set forward_time = states.input_datetime.next_work_meeting.state[0:2]|int + 10 %}
          {% set ten_hoursforward = strptime(forward_time ~ ":" ~ states.input_datetime.next_work_meeting.state[3:5], '%H:%M') %}
          {% set formatted_time = strptime(states('sensor.time'), '%H:%M') %}
          {{ formatted_time == ten_hoursforward }}
      - platform: template
        id: lava-lamp-on
        value_template: >-
          {% set back_time = states.input_datetime.next_work_meeting.state[0:2]|int -2 %}
          {% set two_hoursback = strptime(back_time ~ ":" ~ states.input_datetime.next_work_meeting.state[3:5], '%H:%M') %}
          {% set formatted_time = strptime(states('sensor.time'), '%H:%M') %}
          {{ formatted_time == two_hoursback }}
    condition:
      - condition: state
        entity_id: "binary_sensor.workday_sensor"
        state: "on"
      - condition: state
        entity_id: device_tracker.bayesian_zeke_home
        state: "home"
      - condition: state
        entity_id:
          - input_boolean.guest_mode
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: lava-lamp-on
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.office_lava_lamp
          - conditions:
              - condition: trigger
                id: lava-lamp-off
            sequence:
              - service: light.turn_off
                data:
                  entity_id: light.office_lava_lamp

########################
# Binary Sensors
########################
binary_sensor:

########################
# Cameras
########################
camera:

########################
# Climate
########################
climate:

########################
# Covers
########################
cover:

########################
# Device Trackers
########################
device_tracker:

########################
# Fans
########################
fan:

########################
# Frontend
########################
frontend:

########################
# Groups
########################
group:

########################
# Input Booleans
########################
input_boolean:
  weekday_alarm_on:
  weekend_alarm_on:
  wakeup_alarm_firing:
  snooze_status:
    initial: false
  special_meeting:

########################
# Input DateTime
########################
input_datetime:
  weekday_alarm:
    has_date: false
    has_time: true
  weekend_alarm:
    has_date: false
    has_time: true
  next_work_meeting:
    has_date: false
    has_time: true

########################
# Input Numbers
########################
input_number:

########################
# Input Select
########################
input_select:

########################
# iOS
########################
ios:

########################
# Light
########################
light:

########################
# Media Player
########################
media_player:

########################
# Notify
########################
notify:

########################
# Plant
########################
plant:

########################
# Proximity
########################
proximity:

########################
# Scenes
########################
scene:

########################
# Scripts
########################
script:
  sonos_ksdj_wake_up:
    alias: Sonos KSDJ Wake Up
    sequence:
      - if:
          - alias: "Check if no guests are here."
            condition: state
            entity_id: input_boolean.guest_mode
            state: "off"
        then:
          - alias: "Join Sonos speakers into all group"
            service: media_player.join
            target:
              entity_id:
                - media_player.bedroom
            data:
              group_members:
                - media_player.bathroom
                - media_player.den_1
                - media_player.office
        else:
          - alias: "Unjoin all Sonos speakers into bedroom group"
            service: media_player.unjoin
            target:
              entity_id:
                - media_player.bedroom
                - media_player.bathroom
                - media_player.den_1
                - media_player.office
          - alias: "Join Sonos speakers into bedroom group"
            service: media_player.join
            target:
              entity_id:
                - media_player.bedroom
            data:
              group_members:
                - media_player.bathroom
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.bedroom
            - media_player.bathroom
          volume_level: 0.01
      - service: media_player.play_media
        data:
          entity_id:
            - media_player.bedroom
            - media_player.bathroom
          media_content_id: "x-rincon-mp3radio://ksdj.stream.creek.fm/stream"
          media_content_type: music
      - repeat:
          sequence:
            - alias: "Increase Volume by 0.01"
              service: media_player.volume_set
              data:
                volume_level: "{{ 0.01 * repeat.index }}"
              target:
                entity_id:
                  - media_player.bedroom
                  - media_player.bathroom
            - delay:
                # As time passes, the delay gets smaller and smaller. 120s, 60s, 40s, 30s, 24s,..., 4s
                seconds: "{{ (1/(tan(repeat.index/120, 5))) | round(0, 'ceil', 5)}}"
          until: "{{repeat.index == 30}}"

  sonos_mpr_news_wake_up:
    alias: Sonos MPR News Wake Up
    sequence:
      - if:
          - alias: "Check if guests are here."
            condition: state
            entity_id: input_boolean.guest_mode
            state: "off"
        then:
          - alias: "Join Sonos speakers into all group"
            service: media_player.join
            target:
              entity_id:
                - media_player.bedroom
            data:
              group_members:
                - media_player.bathroom
                - media_player.den_1
                - media_player.office
        else:
          - alias: "Unjoin allSonos speakers into bedroom group"
            service: media_player.unjoin
            target:
              entity_id:
                - media_player.bedroom
                - media_player.bathroom
                - media_player.den_1
                - media_player.office
          - alias: "Join Sonos speakers into bedroom group"
            service: media_player.join
            target:
              entity_id:
                - media_player.bedroom
            data:
              group_members:
                - media_player.bathroom
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.bedroom
            - media_player.bathroom
          volume_level: 0.01
      - delay:
          seconds: 5
      - service: media_player.select_source
        data:
          entity_id:
            - media_player.bedroom
            - media_player.bathroom
          source: "MPR News"
      - repeat:
          sequence:
            - alias: "Increase Volume by 0.01"
              service: media_player.volume_set
              data:
                volume_level: "{{ 0.01 * repeat.index }}"
              target:
                entity_id:
                  - media_player.bedroom
                  - media_player.bathroom
            - delay:
                # As time passes, the delay gets smaller and smaller. 120s, 60s, 40s, 30s, 24s,..., 4s
                seconds: "{{ (1/(tan(repeat.index/120, 5))) | round(0, 'ceil', 5)}}"
          until: "{{repeat.index == 30}}"

  sonos_the_current_wake_up:
    alias: Sonos The Current Wake Up
    sequence:
      - if:
          - alias: "Check if guests are here."
            condition: state
            entity_id: input_boolean.guest_mode
            state: "off"
        then:
          - alias: "Join Sonos speakers into all group"
            service: media_player.join
            target:
              entity_id:
                - media_player.bedroom
            data:
              group_members:
                - media_player.bathroom
                - media_player.den_1
                - media_player.office
        else:
          - alias: "Unjoin allSonos speakers into bedroom group"
            service: media_player.unjoin
            target:
              entity_id:
                - media_player.bedroom
                - media_player.bathroom
                - media_player.den_1
                - media_player.office
          - alias: "Join Sonos speakers into bedroom group"
            service: media_player.join
            target:
              entity_id:
                - media_player.bedroom
            data:
              group_members:
                - media_player.bathroom
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.bedroom
            - media_player.bathroom
          volume_level: 0.01
      - service: media_player.select_source
        data:
          entity_id:
            - media_player.bedroom
            - media_player.bathroom
          source: "The Current"
      - repeat:
          sequence:
            - alias: "Increase Volume by 0.01"
              service: media_player.volume_set
              data:
                volume_level: "{{ 0.01 * repeat.index }}"
              target:
                entity_id:
                  - media_player.bedroom
                  - media_player.bathroom
            - delay:
                # As time passes, the delay gets smaller and smaller. 120s, 60s, 40s, 30s, 24s,..., 4s
                seconds: "{{ (1/(tan(repeat.index/120, 5))) | round(0, 'ceil', 5)}}"
          until: "{{repeat.index == 30}}"

  # sonos_update_alarm:
  #   alias: Update Sonos Alarm
  #   variables:
  #     work_meeting_alarm: 0 # This is a Chime
  #     daily_wakeup_alarm: 1 # This is MPR News
  #   sequence:
  #     - service: sonos.update_alarm
  #       data:
  #         entity_id: media_player.bedroom
  #         alarm_id: "{{ work_meeting_alarm }}" # This is a Chime
  #         time: "{{ states('input_datetime.next_work_meeting') }}"
  #         enabled: true

  # sonos_disable_alarms:
  #   alias: Disable Sonos Alarm
  #   variables:
  #     work_meeting_alarm: 0 # This is a Chime
  #     daily_wakeup_alarm: 1 # This is MPR News
  #   sequence:
  #     - service: sonos.update_alarm
  #       data:
  #         entity_id: media_player.bedroom
  #         alarm_id: "{{ daily_wakeup_alarm }}" # This is MPR News
  #         enabled: false
  #     - service: sonos.update_alarm
  #       data:
  #         entity_id: media_player.bedroom
  #         alarm_id: "{{ work_meeting_alarm }}" # This is a Chime
  #         enabled: false

  snooze_script:
    alias: Snooze Tasks
    sequence:
      - service: light.turn_off
        data:
          entity_id: light.owner_suite_lamps
      - service: media_player.media_stop
        data:
          entity_id: media_player.bedroom
      - delay:
          minutes: 8
      - service: script.turn_on
        entity_id: script.wake_up_script
      - service: media_player.media_play
        data:
          entity_id: media_player.bedroom

  wake_up_script:
    alias: Common Wake Up Tasks
    sequence:
      - alias: Have we already done this?
        condition: state
        entity_id:
          - input_boolean.wakeup_alarm_firing
        state: "off"
      # Ok, this is the first time we're doing this. Carry on.
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.wakeup_alarm_firing
      - alias: "Turn off Adaptive Brightness in bedroom for now"
        service: switch.turn_off
        entity_id:
          - switch.adaptive_lighting_adapt_brightness_owner_suite
          - switch.adaptive_lighting_adapt_color_owner_suite
      - alias: "Turn on light at dimmest setting. Adaptive Lighting will apply"
        service: light.turn_on
        data_template:
          entity_id: light.owner_suite_lamps
          kelvin: 370
          brightness_pct: 1
      - delay:
          seconds: 5
      - service: light.turn_on
        data_template:
          entity_id: light.owner_suite_lamps
          kelvin: 153
          brightness_pct: 100
          transition: 300
      - delay:
          minutes: 1
      - service: switch.turn_off
        data:
          entity_id:
            - switch.adaptive_lighting_sleep_mode_basement
            - switch.adaptive_lighting_sleep_mode_den
            - switch.adaptive_lighting_sleep_mode_hallway
            - switch.adaptive_lighting_sleep_mode_kitchen
            - switch.adaptive_lighting_sleep_mode_owner_suite
            - switch.adaptive_lighting_sleep_mode_living_room
      # - service: switch.turn_off
      #   data:
      #     entity_id:
      #       - switch.humidifier
      - alias: "Slowly Open Blinds"
        repeat:
          until: "{{ repeat.index == 40 }}" # look at increasing from 25 to 60 when I get curtains installed
          sequence:
            - service: cover.set_cover_position
              data:
                entity_id: cover.owner_suite_blinds
                position: "{{ repeat.index }}"
            - delay:
                # seconds: "{{ (1/(tan(repeat.index/180, 5))) | round(0, 'ceil', 5)}}" # <-- drops down to 8 seconds
                seconds: "{{ (75/(log(repeat.index + 1, 5))) | round(0, 'ceil', 5) }}" # <-- drops down to 23 seconds
      - alias: "Set light switches to day mode"
        service: script.turn_on
        entity_id: script.day_mode_switches
      - alias: "Turn on Adaptive Brightness for bedroom"
        service: switch.turn_on
        entity_id:
          - switch.adaptive_lighting_adapt_brightness_owner_suite
          - switch.adaptive_lighting_adapt_color_owner_suite

########################
# Sensor
########################
sensor:

########################
# Switch
########################
switch:

########################
# Weather
########################
weather:

########################
# Zone
########################
zone:
