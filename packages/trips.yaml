################################################################
## Packages / Trips
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: "trips"

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Automation
    ################################################

    automation.initialize_vacation_items:
      <<: *customize
      friendly_name: "Initialize Vacation Items"
      icon: mdi:beach

    automation.on_a_trip_trigger:
      <<: *customize
      friendly_name: "Leaving on a trip"
      icon: mdi:beach

    automation.off_trip_trigger:
      <<: *customize
      friendly_name: "Back from Trip"
      icon: mdi:airplane-landing

    automation.random_off_time:
      <<: *customize
      friendly_name: "Set random turn off time"

    automation.send_nest_airport_home_eta:
      <<: *customize
      friendly_name: "Send Nest ETA from MSP airport to home"
      icon: mdi:airplane-landing

    automation.vacation_lights_on:
      <<: *customize
      friendly_name: "Turn on lights when I am away"

    automation.vacation_lights_off:
      <<: *customize
      friendly_name: "Turn off lights at night when I am away"

    automation.vacuum_flying_home:
      <<: *customize
      friendly_name: "Vacuum house when flying home"

    automation.toggle_vacation_tab:
      <<: *customize
      friendly_name: "Show/Hide Vacation tab"

    ################################################
    ## Binary Sensor
    ################################################
    binary_sensor.sensed_trip:
      <<: *customize
      friendly_name: "Sensed a Trip"
      icon: mdi:airplane-takeoff

    binary_sensor.planned_vacation_calendar:
      <<: *customize
      friendly_name: "Scheduled Vacation Day"
      icon: mdi:airplane-takeoff

    binary_sensor.planned_work_trip_calendar:
      <<: *customize
      friendly_name: "Scheduled Work Trip Day"
      icon: mdi:airplane-takeoff

    binary_sensor.flying_home_today:
      <<: *customize
      friendly_name: "Flying Home Now"
      icon: mdi:airplane-landing

    ################################################
    ## Group
    ################################################
    group.trip_status_card:
      <<: *customize
      friendly_name: "Trip Status"
      icon: mdi:beach

    group.vacation_group_card_1:
      <<: *customize
      friendly_name: "Vacation Group 1"

    group.vacation_group_card_2:
      <<: *customize
      friendly_name: "Vacation Group 2"

    group.vacation_group_card_3:
      <<: *customize
      friendly_name: "Vacation Group 3"

    group.vacation_group_card_4:
      <<: *customize
      friendly_name: "Vacation Group 4"

    ################################################
    ## Input Boolean
    ################################################

    input_boolean.trip:
      <<: *customize
      friendly_name: "On a Trip"
      hidden: true

    ################################################
    ## Input Numbers
    ################################################

    input_number.random_vacation_light_group:
      <<: *customize
      friendly_name: "Random Group of Lights to Turn on"

    ################################################
    ## Sensors
    ################################################
    sensor.turn_off_time:
      <<: *customize
      friendly_name: "Turn off time"
      icon: mdi:clock

    sensor.me_to_home:
      <<: *customize
      friendly_name: "Time to Home"

########################
# Automations
########################
automation:
  # - id: init_vacation
  #   alias: initialize_vacation_items
  #   trigger:
  #   - platform: homeassistant
  #     event: start
  #   action:
  #   - delay: '00:00:{{ (range(1,90)|random|int) }}'
  #   - service: script.vacation_group_visibility

  - id: on_a_trip_trigger
    alias: on_a_trip_trigger
    trigger:
      - platform: state
        entity_id: binary_sensor.bayesian_zeke_home
        to: "off"
        for:
          hours: 20
      - platform: state
        entity_id: binary_sensor.bayesian_zeke_home
        to: "off"
      - platform: state
        entity_id: binary_sensor.planned_work_trip_calendar
        to: "on"
      - platform: state
        entity_id: binary_sensor.planned_vacation_calendar
        to: "on"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.bayesian_zeke_home
          state: "off"
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.planned_vacation_calendar
              state: "on"
            - condition: state
              entity_id: binary_sensor.planned_work_trip_calendar
              state: "on"
            - condition: state
              entity_id: binary_sensor.bayesian_zeke_home
              state: "off"
              for:
                hours: 20
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.trip
      - service: notify.all
        data:
          message: "You're on a trip! \U0001F6EC"

  - id: off_trip_trigger
    alias: off_trip_trigger
    trigger:
      - platform: state
        entity_id: binary_sensor.bayesian_zeke_home
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.sensed_trip
        state: "on"
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.trip
      - service: notify.all
        data:
          message: "Back from trip. \U0001F4BA"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.random_vacation_light_group
          value: "{{ (0|int) }}"

  - id: garage_opened_on_a_trip
    alias: Garage Door Opened while on a Trip
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: open
        id: door_opened_while_gone
      - platform: homeassistant
        event: start
        id: door_opened_while_gone
      - platform: event
        event_type: mobile_app_notification_action
        id: close_garage_mobile_trigger
        event_data:
          action: CLOSE_GARAGE
    condition:
      - condition: state
        entity_id: binary_sensor.sensed_trip
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: door_opened_while_gone
            sequence:
              - service: notify.mobile_app_wethop
                data:
                  title: "Garage opened while on a trip"
                  # message: "Close the door?"
                  data:
                    tag: "garage-opened-on-trip"
                    persistent: true
                    actions:
                      - action: "CLOSE_GARAGE"
                        title: "Close the door now"
                        activationMode: background
                        authenticationRequired: false
                        destructive: false
                        behavior: default
                      - action: "IGNORE_GARAGE"
                        title: "Ignore for 5 minutes"
                        activationMode: background
                        authenticationRequired: false
                        destructive: false
                        behavior: default
          - conditions:
              - condition: trigger
                id: close_garage_mobile_trigger
            sequence:
              - service: cover.close_cover
                entity_id: cover.garage_door
      - delay:
          minutes: 5
      - condition: state
        entity_id: binary_sensor.sensed_trip
        state: "on"
      - service: notify.all
        data:
          message: Closing garage door while you're on a trip.
      - service: cover.close_cover
        entity_id: cover.garage_door

  - id: random_off_time
    alias: random_off_time
    trigger:
      - platform: homeassistant
        event: start
      - platform: time
        at: "12:00:00"
      - platform: state
        entity_id: binary_sensor.sensed_trip
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.sensed_trip
        state: "on"
    action:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.random_vacation_lights_off
          time: "{{ (range(22, 24)|random|int ~ ':' ~ range(0, 59)|random|int ~ ':' ~ range(0, 59)|random|int) }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.random_vacation_light_group
          value: "{{ (range(1, 4)|random|int) }}"
      - service: notify.all
        data:
          message: Turning on group {{states("input_number.random_vacation_light_group")|int }}, lights out at {{ states("input_datetime.random_vacation_lights_off") }}

  # TODO is this still needed with Vacation Mode?
  - id: return_home_from_parents
    alias: return_home_from_parents
    trigger:
      - platform: zone
        entity_id: device_tracker.bayesian_zeke_home
        zone: zone.parents
        event: leave
      # - platform: state
      #   entity_id: device_tracker.bayesian_zeke_home
      #   from: 'Parents'
    condition:
      condition: time
      weekday:
        - sun
    action:
      # - service: nest.set_eta
      #   data_template:
      #     eta: '{{states.sensor.time_to_home.state}}'
      #     trip_id: "{{ states.input_select.trip_origin.state }}"
      - service: climate.set_preset_mode
        entity_id: climate.my_ecobee
        data:
          preset_mode: "Away"
      - service: notify.all
        data_template:
          message: >-
            Turning off Ecobee away while driving home from parents

  - id: send_nest_airport_home_eta
    alias: send_nest_airport_home_eta
    trigger:
      - platform: zone
        entity_id: device_tracker.bayesian_zeke_home
        zone: zone.msp
        event: leave
    condition:
      - condition: state
        entity_id: binary_sensor.flying_home_today
        state: "on"
    action:
      # - service: nest.set_eta
      #   data_template:
      #     eta: '{{states.sensor.time_to_home.state}}'
      #     trip_id: "{{ states.input_select.trip_origin.state }}"
      - service: climate.set_preset_mode
        entity_id: climate.my_ecobee
        data:
          preset_mode: "Home"
      - service: notify.all
        data_template:
          message: >-
            Turning off Ecobee Away mode while driving home from MSP

  - id: vacation_lights_on
    alias: vacation_lights_on
    trigger:
      - platform: sun
        event: sunset
        offset: -00:30:00
    condition:
      - condition: state
        entity_id: binary_sensor.sensed_trip
        state: "on"
    action:
      - delay: 00:{{ (range(5,45)|random|int) }}:00
      - service: scene.turn_on
        data_template:
          entity_id: scene.vacation_group_{{ states("input_number.random_vacation_light_group")|int }}
      - service: notify.all
        data:
          message: Turning on lights while you're away.

  - id: vacation_lights_off
    alias: vacation_lights_off
    trigger:
      - platform: time
        at: input_datetime.random_vacation_lights_off
    #- platform: template
    #value_template: "{{ states('sensor.time') == (state_attr('input_datetime.random_vacation_lights_off', 'timestamp') | int | timestamp_custom('%H:%M', True)) }}"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.sensed_trip
          state: "on"
    action:
      - service: scene.turn_on
        entity_id: scene.leave_home
      - service: script.lights_off_except
        data:
          exclude_lights:
            - light.outside_front_lights
      # - service: light.turn_off
      #   entity_id: "all"
      - service: fan.turn_off
        entity_id: "all"
      - service: notify.all
        data:
          message: Lights off while you're away.
      - delay: 25
      - service: scene.turn_on
        entity_id: scene.leave_home

  - id: vacuum_flying_home
    alias: vacuum_flying_home
    trigger:
      - entity_id: binary_sensor.flying_home_today
        from: "off"
        platform: state
        to: "on"
    condition: []
    action:
      - service: vacuum.start
        data:
          entity_id: all
      - service: notify.all
        data:
          message: "Vacuuming the house while you fly home \U0001F4BA"

  # - id: toggle_vacation_tab
  #   alias: toggle_vacation_tab
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.sensed_trip
  #   - platform: homeassistant
  #     event: start
  #   condition: []
  #   action:
  #   - delay: '00:00:{{ (range(1,30)|random|int) }}'
  #   - service: script.toggle_view
  #     data_template:
  #       view_id: vacation
  #       visible: >-
  #         {{ is_state("binary_sensor.sensed_trip", 'on') | lower }}

########################
# Binary Sensors
########################
binary_sensor:
  - platform: template
    sensors:
      sensed_trip:
        value_template: >-
          {% if is_state("input_boolean.trip", 'on') %}
            true
          {% else %}
            false
          {% endif %}
      planned_vacation_calendar:
        value_template: >-
          {% if is_state("calendar.curling_vacation", 'on') or is_state("calendar.personal_vacation",'on')  %}
            true
          {% else %}
            false
          {% endif %}
      planned_work_trip_calendar:
        value_template: >-
          {% if is_state("calendar.work_trip", 'on') %}
            true
          {% else %}
            false
          {% endif %}
      flying_home_today:
        delay_off: 3:00:00
        value_template: >-
          {% if is_state("calendar.flight_to_msp_today", 'on') or is_state("calendar.flight_to_rst_today",'on')  %}
            true
          {% else %}
            false
          {% endif %}

########################
# Groups
########################
group:
  trip_status_card:
    entities:
      - binary_sensor.planned_vacation_calendar
      - binary_sensor.planned_work_trip_calendar
      - binary_sensor.sensed_trip
      - binary_sensor.flying_home_today
      - sensor.turn_off_time

  vacation_climate:
    entities:
      - group.average_house_climate

  vacation_group_card_1:
    entities:
      - light.living_room_all
      - light.basement_great_room
      - light.den_floods
      - scene.vacation_group_1

  vacation_group_card_2:
    entities:
      - light.basement_great_room
      - light.owner_suite_lamps
      - light.office
      - light.hall_all_downlights
      - light.kitchen_sink
      - scene.vacation_group_2

  vacation_group_card_3:
    entities:
      - light.living_room_all
      - light.owner_suite_lamps
      - light.kitchen_sink
      - light.den_leather_chair
      - scene.vacation_group_3

  vacation_group_card_4:
    entities:
      - light.living_room_all
      - light.kitchen_sink
      - light.office_lights
      - light.hall_all_downlights
      - light.guest_bedroom
      - scene.vacation_group_4

########################
# Input Booleans
########################
input_boolean:
  trip:
    name: On a Trip
  house_unoccupied:
    name: House Unoccupied

########################
# Input DateTimes
########################
input_datetime:
  random_vacation_lights_off:
    name: Turn Off Lights at a Random Time
    has_date: false
    has_time: true

########################
# Input Numbers
########################
input_number:
  random_vacation_light_group:
    min: 0
    max: 4
    step: 1
    mode: box

########################
# Scenes
########################
scene:
  - name: Vacation Group 1
    entities:
      light.living_room_lamps:
        state: "on"
      light.basement_great_room:
        state: "on"
      light.den_floods:
        state: "on"

  - name: Vacation Group 2
    entities:
      light.basement_great_room:
        state: "on"
      light.owner_suite_lamps:
        state: "on"
      light.office:
        state: "on"
      light.hall_all_downlights:
        state: "on"
      light.kitchen_sink:
        state: "on"

  - name: Vacation Group 3
    entities:
      light.living_room_lamps:
        state: "on"
      light.owner_suite_lamps:
        state: "on"
      light.kitchen_sink:
        state: "on"
      light.den_leather_chair:
        state: "on"

  - name: Vacation Group 4
    entities:
      light.living_room_lamps:
        state: "on"
      light.kitchen_sink:
        state: "on"
      light.office_lights:
        state: "on"
      light.hall_all_downlights:
        state: "on"
      light.guest_bedroom:
        state: "on"

########################
# Scripts
########################
script:
  # toggle_automations_showing_house:
  #   sequence:
  #     - service: homeassistant.toggle
  #       data:
  #         entity_id: group.all_automations
  # vacation_group_visibility:
  #   sequence:
  #     - service: script.group_visibility
  #       data:
  #         entity_id: group.vacation_group_card_1
  #         cond: input_number.random_vacation_light_group
  #         visible_state: '1.0'
  #     - service: script.group_visibility
  #       data:
  #         entity_id: group.vacation_group_card_2
  #         cond: input_number.random_vacation_light_group
  #         visible_state: '2.0'
  #     - service: script.group_visibility
  #       data:
  #         entity_id: group.vacation_group_card_3
  #         cond: input_number.random_vacation_light_group
  #         visible_state: '3.0'
  #     - service: script.group_visibility
  #       data:
  #         entity_id: group.vacation_group_card_4
  #         cond: input_number.random_vacation_light_group
  #         visible_state: '4.0'

########################
# Sensors
########################
sensor:
  # Moved to Integration
  # - platform: waze_travel_time
  #   name: "Me to Home"
  #   origin: device_tracker.bayesian_zeke_home
  #   destination: zone.home
  #   region: "US"

  - platform: template
    sensors:
      time_to_home:
        friendly_name: "Time to Home"
        value_template: >-
          {% set to_home = states.sensor.me_to_home.state | int %}
          {% set minutes = ((to_home % 60) / 1) | int %} 
          {% set hours = ((to_home % 1440) / 60) | int %}
          {{hours}}:{{minutes}}:00
