################################################################
## Packages / Curling
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'curling'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Automation
    ################################################

    automation.leave_home_for_curling:
      <<: *customize
      friendly_name: "Leave home for curling"
      icon: mdi:curling

    automation.return_home_from_OCC:
      <<: *customize
      friendly_name: "Return home from OCC"
      icon: mdi:curling

    automation.return_home_from_spcc:
      <<: *customize
      friendly_name: "Return home from SPCC"
      icon: mdi:curling

    automation.display_curling_tab:
      <<: *customize
      friendly_name: "Display Curling tab"
      icon: mdi:curling

    automation.toggle_curling_automations_on_season_change:
      <<: *customize
      friendly_name: "Toggle Curling season automations"
      icon: mdi:curling

    automation.toggle_curling_tab:
      <<: *customize
      friendly_name: "Toggle Curling tab"
      icon: mdi:curling
      
    ################################################
    ## Binary Sensor
    ################################################

    binary_sensor.curling_season:
      <<: *customize
      friendly_name: "Curling Season"
      icon: mdi:calendar

    binary_sensor.away_from_curling:
      <<: *customize
      friendly_name: "Leaving Curling"
      icon: mdi:curling

    binary_sensor.test_home:
      <<: *customize
      friendly_name: "Test for heading home from curling"
      icon: mdi:curling

    ################################################
    ## Group
    ################################################

    group.curling_sensors:
      <<: *customize
      friendly_name: "Curling Sensors"

    group.curling_automations:
      <<: *customize
      friendly_name: "Curling Automations"

    ################################################
    ## Scripts
    ################################################
    script.toggle_curling_automation_on_curling_season:
      <<: *customize
      friendly_name: "Toggle Curling Automation Based on Boolean Sensor"

    ################################################
    ## Sensors
    ################################################

    sensor.occ_time:
      <<: *customize
      friendly_name: "Last change in OCC Dir"
      icon_template: mdi:clock

    sensor.spcc_time:
      <<: *customize
      friendly_name: "Last Change in SPCC Dir"
      icon_template: mdi:clock

    sensor.spcc_distance:
      <<: *customize
      friendly_name: "Distance to SPCC"
      icon: mdi:curling

    sensor.heading_spcc:
      <<: *customize
      friendly_name: "Direction of SPCC"
      icon: mdi:curling

    sensor.heading_occ:
      <<: *customize
      friendly_name: "Direction of OCC"
      icon: mdi:curling

########################
# Automations
########################
automation:
  - id: leave_home_for_curling
    alias: leave_home_for_curling
    trigger:
    - entity_id: binary_sensor.bayesian_zeke_home
      from: 'on'
      platform: state
      to: 'off'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '17:00:00'
          before: '19:45:00'
          weekday:
          - tue
          - wed
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'
    action:
    - data:
        away_mode: true
        entity_id: all
      service: climate.set_away_mode
    - data:
        message: Good Curling!
      service: notify.all

  - id: return_home_from_occ
    alias: return_home_from_occ
    trigger:
      # - platform: state
      #   entity_id: device_tracker.bayesian_zeke_home
      #   from: 'Owatonna Curling Club'
      - platform: zone
        entity_id: device_tracker.bayesian_zeke_home
        zone: zone.occ
        event: leave
    condition:
      condition: time
      weekday:
      - sun
      - mon
      - tue
    action:
    # - service: nest.set_eta
    #   data_template:
    #     eta: '{{states.sensor.time_to_home.state}}'
    #     trip_id: "{{ states.input_select.trip_origin.state }}"
    - service: climate.set_away_mode
      data:
        away_mode: 'off'
        entity_id: all
    - service: notify.all
      data_template:
        message: >-
          Sent ETA of {{ states.sensor.time_to_home.state }} to Nest, driving home from OCC

  - id: return_home_from_spcc
    alias: return_home_from_spcc
    trigger:
      - platform: zone
        entity_id: device_tracker.bayesian_zeke_home
        zone: zone.spcc
        event: leave
      # - platform: state
      #   entity_id: device_tracker.bayesian_zeke_home
      #   from: "St Paul Curling Club"
      #   to: "Twin Cities"
    condition:
      condition: time
      weekday:
      - sun
      - wed
      - thu
    action:
    # - service: nest.set_eta
    #   data_template:
    #     eta: '{{states.sensor.time_to_home.state}}'
    #     trip_id: "{{ states.input_select.trip_origin.state }}"
    - service: climate.set_away_mode
      data:
        away_mode: 'off'
        entity_id: all
    - service: notify.all
      data_template:
        message: >-
          Sent ETA of {{ states.sensor.time_to_home.state }} to Nest, driving home from SPCC

  - id: toggle_curling_automations_on_season_change
    alias: toggle_curling_automations_on_season_change
    trigger:
    - platform: state
      entity_id: binary_sensor.curling_season
    - platform: homeassistant
      event: start
    action:
    - service: script.toggle_curling_automation_on_curling_season
      data:
        entity_id: automation.return_home_from_OCC
    - service: script.toggle_curling_automation_on_curling_season
      data:
        entity_id: automation.leave_home_for_curling
    - service: script.toggle_curling_automation_on_curling_season
      data:
        entity_id: automation.return_home_from_spcc

  - id: toggle_curling_tab
    alias: toggle_curling_tab
    trigger:
    - platform: state
      entity_id: binary_sensor.curling_season
    - platform: homeassistant
      event: start
    condition: []
    action:
    - delay: '00:00:{{ (range(1,60)|random|int) }}'
    - service: script.toggle_view
      data_template:
        view_id: curling
        visible: >-
          {{ is_state("binary_sensor.curling_season", 'on') | lower }}

########################
# Binary Sensors
########################
binary_sensor:
  - platform: template
    sensors:
      curling_season:
        entity_id: sensor.time
        value_template: >-
          {{ now().strftime("%m") |int in [1,2,3,4,10,11,12] }}
      away_from_curling:
        value_template: >
          {% if
            (((as_timestamp(now()) | int - as_timestamp(states.sensor.twincities.last_changed))//60) | int > 10) and (states.sensor.twincities.state=="away_from")
            or
            (((as_timestamp(now()) | int - as_timestamp(states.sensor.heading_occ.last_changed))//60) | int > 5) and (states.sensor.heading_occ.state=="away_from")
          %} true
          {% else %}
            false
          {% endif %}
        entity_id: sensor.time
        device_class: moving
      test_home:
        value_template: >
          {% if
            (((as_timestamp(now()) | int - as_timestamp(states.sensor.heading_spcc.last_changed)) | int > 1200) and states.sensor.heading_spcc.state=="away_from")
            or
            (((as_timestamp(now())| int - as_timestamp(states.sensor.heading_occ.last_changed)) | int > 600) and states.sensor.heading_occ.state=="away_from")
          %} true
          {% else %}
            false
          {% endif %}

########################
# Groups
########################
group:
  curling_sensors:
    entities:
      - binary_sensor.curling_season
      - sensor.occ_time
      - sensor.heading_occ
      - sensor.spcc_time
      - sensor.spcc_distance
      - sensor.heading_spcc
      - binary_sensor.away_from_curling
      - binary_sensor.test_home
  curling_automations:
    entities:
      - automation.leave_home_for_curling
      - automation.return_home_from_occ
      - automation.return_home_from_spcc

########################
# Scripts
########################
script:
  toggle_curling_automation_on_curling_season:
    sequence:
      - service_template: >-
          {% if is_state("binary_sensor.curling_season", 'on') %}
            automation.turn_on
          {% else %}
            automation.turn_off
          {% endif %}
        data_template:
          entity_id: "{{ entity_id }}"

########################
# Sensors
########################
sensor:
  - platform: template
    sensors:
      occ_time:
        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.sensor.heading_occ.last_changed)) | int //60 }}'
        entity_id: sensor.time
        unit_of_measurement: 'minutes'
      spcc_time:
        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.sensor.heading_spcc.last_changed)) | int //60 }}'
        entity_id: sensor.time
        unit_of_measurement: 'minutes'
      spcc_distance:
        value_template: '{{ states.proximity.spcc.state }}'
        entity_id: sensor.time
        unit_of_measurement: 'mi'
      heading_spcc:
        value_template: '{{ states.proximity.spcc.attributes.dir_of_travel |default("unknown") }}'
      heading_occ:
        value_template: '{{ states.proximity.occ.attributes.dir_of_travel |default("unknown") }}'
