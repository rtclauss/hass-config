################################################################
## Packages / Car
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: "car"

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Alarm Panels
    ################################################

    ################################################
    ## Automations
    ################################################

    ################################################
    ## Binary Sensors
    ################################################

    ################################################
    ## Cameras
    ################################################

    ################################################
    ## Cover
    ################################################

    ################################################
    ## Device Trackers
    ################################################

    ################################################
    ## Groups
    ################################################

    ################################################
    ## Input Boolean
    ################################################
    # input_boolean.car_in_motion:
    #   <<: *customize
    #   icon: mdi:car
    #   class: motion

    ################################################
    ## Input Numbers
    ################################################

    ################################################
    ## Input Select
    ################################################

    ################################################
    ## iOS
    ################################################

    ################################################
    ## Light
    ################################################

    ################################################
    ## Proximity
    ################################################

    ################################################
    ## Scripts
    ################################################

    ################################################
    ## Sensors
    ################################################
    sensor.charge_complete:
      <<: *customize
      icon: mdi:robot-vacuum
      friendly_name: "Tesla Charge Complete Estimate"
    sensor.waze_next_trip_distance:
      <<: *customize
      icon: mdi:robot-vacuum
      friendly_name: "Distance to next destination"

################################################
## Thermostats
################################################

################################################
## Zone
################################################

########################
# Alarm Panel
########################
alarm_control_panel:

########################
## Automation
########################
automation:
  - id: max_range_charge_handler
    alias: max_range_charge_handler
    trigger:
      - platform: state
        entity_id: binary_sensor.upcoming_trip_charging
        from: "off"
        to: "on"
        id: trip-upcoming
      - platform: zone
        entity_id: device_tracker.bayesian_zeke_home
        zone: zone.home
        event: enter
        id: arrive-home
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: trip-upcoming
            sequence:
              # - service: switch.turn_on
              #   entity_id: switch.nigori_maxrange_switch
              - service: number.set_value
                entity_id: number.nigori_charge_limit
                data:
                  value: "100"
              - service: persistent_notification.create
                data_template:
                  title: Max Charge On
                  message: "Long-range trip soon. Charging to 1.21 Gigawatts!"
                  notification_id: low-battery-alert
              - service: notify.all
                data_template:
                  message: >-
                    Long-range trip soon. Charging to 1.21 Gigawatts!
              - service: script.tesla_set_precondition_schedule_time
              - service: notify.all
                data_template:
                  message: >-
                    Set car precondition time!
          - conditions:
              - condition: trigger
                id: arrive-home
            sequence:
              # - service: switch.turn_off
              #   entity_id: switch.nigori_maxrange_switch
              - service: number.set_value
                entity_id: number.nigori_charge_limit
                data:
                  value: "75"
              - service: persistent_notification.create
                enabled: false
                data_template:
                  title: Max Charge Off
                  message: "Turned off max charge"
                  notification_id: low-battery-alert
              - service: notify.all
                enabled: false
                data_template:
                  message: >-
                    Turned off max charge
              # - service: script.turn_on
              #   entity_id: script.tesla_set_charge_limit_soc
              # TODO enable
              # once https://github.com/home-assistant/core/pull/66162
              # is released in 2022.2 or 2022.3
              - service: script.tesla_set_precondition_schedule_time
              - service: notify.all
                data_template:
                  message: >-
                    Set car precondition time!

  # - id: turn_off_max_range_charge_when_arrive_home
  #   alias: turn_off_max_range_charge_when_arrive_home
  #   trigger:
  #     - platform: zone
  #       entity_id: device_tracker.bayesian_zeke_home
  #       zone: zone.home
  #       event: enter
  #   condition:
  #     and:
  #       - alias: "Upcoming Trip in 24 hours so don't turn off max range when return home"
  #         condition: state
  #         entity_id: binary_sensor.upcoming_trip_charging
  #         state: "off"
  #       - alias: "I'm driving home"
  #         condition: state
  #         entity_id: sensor.wethop_activity
  #         state: "Automotive"
  #   action:
  #     - service: switch.turn_off
  #       entity_id: switch.nigori_maxrange_switch
  #     - service: persistent_notification.create
  #       data_template:
  #         title: Max Charge Off
  #         message: "Turned off max charge"
  #         notification_id: low-battery-alert
  #     - service: notify.all
  #       data_template:
  #         message: >-
  #           Turned off max charge
  #     - service: script.turn_on
  #       entity_id: script.tesla_set_charge_limit_soc
  #     # TODO enable
  #     # once https://github.com/home-assistant/core/pull/66162
  #     # is released in 2022.2 or 2022.3
  #     - service: script.tesla_set_precondition_schedule_time
  #     - service: notify.all
  #       data_template:
  #         message: >-
  #           Set car precondition time!

  # - id: set_tesla_charge_limit_on_change
  #   alias: set_tesla_charge_limit_on_change
  #   trigger:
  #     - platform: state
  #       entity_id: number.nigori_charge_limit
  #   action:
  #     - alias: "Update SOC Limit"
  #       service: script.turn_on
  #       entity_id: script.tesla_set_charge_limit_soc

  - id: garage_door_reminder
    alias: Close forgotten garage door
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: open
    condition:
      - condition: time
        after: "23:30:00"
    action:
      - service: notify.all
        data:
          message: Close the garage door.

  - alias: Tesla set polling time short on startup if charger is connected
    id: tesla_short_polling_charger_connected
    description: When HA starts up. We adjust the Polling Interval down from the configured value if we are connected to a charger
    trigger:
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: binary_sensor.nigori_charging
        state: "on"
    action:
      - delay: "00:01:00"
      - service: tesla_custom.polling_interval
        data:
          scan_interval: 30

  - alias: Tesla set polling time short on startup if car is driving
    id: tesla_short_polling_driving
    description: When HA starts up. We adjust the Polling Interval down from the configured value if we are driving
    trigger:
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: binary_sensor.nigori_parking_brake
        state: "off"
    action:
      - delay: "00:01:00"
      - service: tesla_custom.polling_interval
        data:
          scan_interval: 30

  - alias: Tesla set polling time long when charger is disconnected
    description: We adjust the Polling Interval up to the configured value if we are disconnecting from the charger
    id: tesla_long_polling_charger_disconnected
    trigger:
      - platform: state
        entity_id: binary_sensor.nigori_charging
        to: "off"
        for: "00:15:00"
    condition:
      - condition: state
        entity_id: binary_sensor.nigori_parking_brake
        state: "on"
    action:
      - service: tesla_custom.polling_interval
        data:
          scan_interval: 660

  - alias: Tesla set polling time long when car is parked
    description: We adjust the Polling Interval up to the configured value when we are parked if the charger is not connected
    id: tesla_long_polling_charger_diconnected_parked
    trigger:
      - platform: state
        entity_id: binary_sensor.nigori_parking_brake
        to: "on"
        for: "00:15:00"
    condition:
      - condition: state
        entity_id: binary_sensor.nigori_charging
        state: "off"
    action:
      - service: tesla_custom.polling_interval
        data:
          scan_interval: 660

########################
# Binary Sensors
########################
binary_sensor:

########################
# Cameras
########################
camera:

########################
# Cover
########################
cover:
  # Removed and moved to UI config
  # - platform: myq
  #   username: !secret myq_user
  #   password: !secret myq_password
  #   type: chamberlain

########################
# Device Trackers
########################
device_tracker:
  # replaced with tesla
  # - platform: traccar
  #   host: !secret traccar_ip
  #   port: 80
  #   username: !secret traccar_user
  #   password: !secret traccar_password
  #   monitored_conditions: ["dirOfTravel"]
  #   event: ["ignition_on", "ignition_off"]
  #   scan_interval: 10

########################
# Groups
########################
group:

########################
# Input Booleans
########################
input_boolean:
  # car_in_motion:

########################
# Input Numbers
########################
# Tesla Custom Integration v3 has this built in
# input_number:
#   nigori_charge_limit:
#     name: Nigori Charge Limit
#     min: 0
#     max: 100
#     step: 5
#     icon: mdi:battery
#     unit_of_measurement: "%"

########################
# Input Select
########################
input_select:

########################
# iOS
########################
ios:

########################
# Light
########################
light:

########################
# Proximity
########################
proximity:

########################
# Scenes
########################
scene:

########################
# Scripts
########################
script:
  tesla_set_precondition_schedule_time:
    alias: Tesla Set Precondition Schedule Time
    #mode: restart
    sequence:
      # If this is an all-day event, do not precondition (it will precondition at midnight).
      - alias: Check if this is not an all-day event
        condition: state
        entity_id: binary_sensor.upcoming_trip_charging
        attribute: all_day
        state: off
      - alias: Set Scheduled Departure Time
        service: tesla_custom.api
        data:
          command: SCHEDULED_DEPARTURE
          parameters:
            path_vars:
              vehicle_id: "{{ state_attr('binary_sensor.nigori_online', 'id') }}"
            enable: true
            departure_time: >-
              {{state_attr('binary_sensor.upcoming_trip_charging', 'start_time')| as_datetime|as_local - timedelta(minutes=state_attr('sensor.waze_next_trip_distance','duration')) - timedelta(minutes=19)}}
            preconditioning_enabled: true
            preconditioning_weekdays_only: false
            off_peak_charging_enabled: true
            off_peak_charging_weekdays_only: true
            end_off_peak_time: 360
            wake_if_asleep: true

  # tesla_set_charge_limit_soc:
  #   alias: Tesla Set Charge Limit SOC
  #   mode: restart
  #   sequence:
  #     - service: tesla_custom.api
  #       data:
  #         command: CHANGE_CHARGE_LIMIT
  #         parameters:
  #           path_vars:
  #             vehicle_id: "{{ state_attr('binary_sensor.nigori_online', 'id') }}"
  #           percent: "{{ states('input_number.nigori_charge_limit') | int(default=90) }}"
  #           wake_if_asleep: true

########################
# Sensor
########################
sensor:
  - platform: template
    sensors:
      calendar_destination:
        friendly_name: "Next Calendar Destination"
        value_template: >-
          {% set personal_meeting_time = (state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) %}
          {% set work_meeting_upcoming = state_attr("calendar.work_trip", "start_time") %}
          {% if state_attr("calendar.work_trip", "start_time") != None %}
            {% set work_meeting_time = (state_attr("calendar.work_trip", "start_time") | is_defined| as_datetime|as_local) %}
            {% if "-" in ((personal_meeting_time - work_meeting_time)|string) %}
              {{ state_attr("calendar.ryan_claussen", "location") }}
            {% else %}
              {{ state_attr("calendar.work_trip", "location") }}
            {% endif %}
          {% else %}
            {{ state_attr("calendar.ryan_claussen", "location") }}
          {% endif %}

########################
# Template
########################
template:
  - binary_sensor:
      - name: upcoming_trip_charging
        availability: >-
          {{ state_attr("sensor.waze_next_trip_distance", "distance") != None }}
        attributes:
          entry: >-
            {% if (now() >= ((state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) %}
              Personal: {{ state_attr('calendar.ryan_claussen', 'message') }}
            {% elif state_attr("calendar.work_trip", "start_time")!= None and (now() >= ((state_attr("calendar.work_trip",     "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) %}
              Work: {{ state_attr('calendar.work_trip', 'message') }}
            {% elif state_attr("calendar.curling", "start_time") != None and (now() >= ((state_attr("calendar.curling", "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) %}
              Curling: {{ state_attr('calendar.curling', 'message') }}
            {% endif %}
          start_time: >-
            {% if (now() >= ((state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) %}
              {{ state_attr("calendar.ryan_claussen", "start_time") }}
            {% elif state_attr("calendar.work_trip", "start_time")!= None and (now() >= ((state_attr("calendar.work_trip",     "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) %}
              {{ state_attr("calendar.work_trip",     "start_time") }}
            {% elif state_attr("calendar.curling", "start_time") != None and (now() >= ((state_attr("calendar.curling",     "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) %}
              {{ state_attr("calendar.curling",     "start_time") }}
            {% endif %}
          all_day: >-
            {{ ( state_attr("calendar.curling", "all_day") ) or ( state_attr("calendar.work_trip", "all_day") ) or ( state_attr("calendar.ryan_claussen", "all_day") ) }}
        state: >-
          {% if 
          (
            (
              (now() >= ((state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) - (timedelta(hours=24)))) 
                and
              ( state_attr("calendar.ryan_claussen", "location") != '' )
            )
              or 
            (state_attr("calendar.work_trip", "start_time") != None and
              (now() >= ((state_attr("calendar.work_trip", "start_time") | as_datetime|as_local) - (timedelta(hours=24))))
                and
              ( state_attr("calendar.work_trip", "location") != '')
            )
              or
            ( state_attr("calendar.curling", "start_time") != None and
              (now() >= ((state_attr("calendar.curling", "start_time") | as_datetime|as_local) - (timedelta(hours=24))))
                and
              ( state_attr("calendar.curling", "location") != '')
            )
          )
          and
            (state_attr("sensor.waze_next_trip_distance", "distance")|int > 45)
          %}
            True
          {% else %}
            False
          {% endif %}
  - sensor:
      - name: charge_complete
        device_class: timestamp
        availability: >-
          {{ states.sensor.nigori_charging_rate.last_updated is defined and state_attr('sensor.nigori_charging_rate','time_left') != None }}
        state: >-
          {% if states.sensor.nigori_charging_rate.last_updated is defined and state_attr('sensor.nigori_charging_rate','time_left') != None %}
            {{ (states.sensor.nigori_charging_rate.last_updated + timedelta(hours=state_attr('sensor.nigori_charging_rate','time_left'))).isoformat() }}
          {% else %}
            {{ now() }}
          {% endif %}
      # I don't think this is used by anything.
      # - name: next_trip_distance
      #   unit_of_measurement: "mi"
      #   availability: >-
      #     {{ state_attr("sensor.waze_next_trip_distance", "distance") != None }}
      #   state: >-
      #     {{ state_attr("sensor.waze_next_trip_distance", "distance") | int }}

########################
# Zone
########################
zone:
