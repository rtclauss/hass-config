################################################################
## Packages / Car
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: "car"

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Alarm Panels
    ################################################

    ################################################
    ## Automations
    ################################################

    ################################################
    ## Binary Sensors
    ################################################

    ################################################
    ## Cameras
    ################################################

    ################################################
    ## Cover
    ################################################

    ################################################
    ## Device Trackers
    ################################################

    ################################################
    ## Groups
    ################################################

    ################################################
    ## Input Boolean
    ################################################
    input_boolean.car_in_motion:
      <<: *customize
      icon: mdi:car
      class: motion

    ################################################
    ## Input Numbers
    ################################################

    ################################################
    ## Input Select
    ################################################

    ################################################
    ## iOS
    ################################################

    ################################################
    ## Light
    ################################################

    ################################################
    ## Proximity
    ################################################

    ################################################
    ## Scripts
    ################################################

    ################################################
    ## Sensors
    ################################################
    sensor.charging_complete:
      <<: *customize
      icon: mdi:robot-vacuum
      friendly_name: "Tesla Charge Complete Estimate"
    sensor.next_trip_distance:
      <<: *customize
      icon: mdi:robot-vacuum
      friendly_name: "Distance to next destination"

################################################
## Thermostats
################################################

################################################
## Zone
################################################

########################
# Alarm Panel
########################
alarm_control_panel:

########################
## Automation
########################
automation:
  - id: turn_on_max_range_charge
    alias: turn_on_max_range_charge
    # TODO replace this with a AppDaemon app that looks at the distance to the location
    # and decides whether to turn on max range or not.
    trigger:
      - platform: state
        entity_id: binary_sensor.upcoming_trip_charging
        from: "off"
        to: "on"
    action:
      - service: switch.turn_on
        entity_id: switch.nigori_maxrange_switch
      - service: persistent_notification.create
        data_template:
          title: Max Charge
          message: "Long-range trip soon. Charging to 1.21 Gigawatts!"
          notification_id: low-battery-alert
      - service: notify.all
        data_template:
          message: >-
            "Long-range trip soon. Charging to 1.21 Gigawatts!"

  - id: garage_door_reminder
    alias: Close forgotten garage door
    trigger:
      - platform: state
        entity_id: cover.garage_door_opener
        to: open
    condition:
      - condition: time
        after: "23:30:00"
    action:
      - service: notify.all
        data:
          message: Close the garage door.

########################
# Binary Sensors
########################
binary_sensor:

########################
# Cameras
########################
camera:

########################
# Cover
########################
cover:
  # Removed and moved to UI config
  # - platform: myq
  #   username: !secret myq_user
  #   password: !secret myq_password
  #   type: chamberlain

########################
# Device Trackers
########################
device_tracker:
  # replaced with tesla
  # - platform: traccar
  #   host: !secret traccar_ip
  #   port: 80
  #   username: !secret traccar_user
  #   password: !secret traccar_password
  #   monitored_conditions: ["dirOfTravel"]
  #   event: ["ignition_on", "ignition_off"]
  #   scan_interval: 10

########################
# Groups
########################
group:

########################
# Input Booleans
########################
input_boolean:
  car_in_motion:

########################
# Input Numbers
########################
input_number:

########################
# Input Select
########################
input_select:

########################
# iOS
########################
ios:

########################
# Light
########################
light:

########################
# Proximity
########################
proximity:

########################
# Scenes
########################
scene:

########################
# Scripts
########################
script:

########################
# Sensor
########################
sensor:
  - platform: template
    sensors:
      calendar_destination:
        friendly_name: "Next Calendar Destination"
        value_template: >-
          {% set personal_meeting_time = (state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) %}
          {% set work_meeting_time = (state_attr("calendar.work_trip", "start_time") | as_datetime|as_local) %}
          {% if "-" in ((personal_meeting_time - work_meeting_time)|string) %}
            {{ state_attr("calendar.ryan_claussen", "location") }}
          {% else %}
            {{ state_attr("calendar.work_trip", "location") }}
          {% endif %}

########################
# Template
########################
template:
  - binary_sensor:
      - name: upcoming_trip_charging
        availability: >-
          {{ state_attr("sensor.waze_next_trip_distance", "distance") != None }}
        attributes:
          entry: >-
            {% if (now() >= ((state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) %}
              Personal: {{ state_attr('calendar.ryan_claussen', 'message') }}
            {% elif (now() >= ((state_attr("calendar.work_trip",     "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) %}
              Work: {{ state_attr('calendar.work_trip', 'message') }}
            {% elif (now() >= ((state_attr("calendar.curling",     "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) %}
              Curling: {{ state_attr('calendar.curling', 'message') }}
            {% endif %}
          start_time: >-
            {% if (now() >= ((state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) %}
              {{ state_attr("calendar.ryan_claussen", "start_time") }}
            {% elif (now() >= ((state_attr("calendar.work_trip",     "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) %}
              {{ state_attr("calendar.work_trip",     "start_time") }}
            {% elif (now() >= ((state_attr("calendar.curling",     "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) %}
              {{ state_attr("calendar.curling",     "start_time") }}
            {% endif %}
        state: >-
          {% if 
          (
              (now() >= ((state_attr("calendar.ryan_claussen", "start_time") | as_datetime|as_local) - (timedelta(hours=4)))) 
            or 
              (now() >= ((state_attr("calendar.work_trip", "start_time") | as_datetime|as_local) - (timedelta(hours=4))))
            or 
              (now() >= ((state_attr("calendar.curling", "start_time") | as_datetime|as_local) - (timedelta(hours=4))))
          )
          and
            (state_attr("sensor.waze_next_trip_distance", "distance")|int > 45)
          %}
            true
          {% else %}
            false
          {% endif %}
  - sensor:
      - name: charge_complete
        device_class: timestamp
        availability: >-
          {{ states.sensor.nigori_charging_rate_sensor.last_updated is defined and state_attr('sensor.nigori_charging_rate_sensor','time_left') != None }}
        state: >-
          {% if states.sensor.nigori_charging_rate_sensor.last_updated is defined and state_attr('sensor.nigori_charging_rate_sensor','time_left') != None %}
            {{ (states.sensor.nigori_charging_rate_sensor.last_updated + timedelta(hours=state_attr('sensor.nigori_charging_rate_sensor','time_left'))).isoformat() }}
          {% else %}
            {{ now() }}
          {% endif %}
      # I don't think this is used by anything.
      # - name: next_trip_distance
      #   unit_of_measurement: "mi"
      #   availability: >-
      #     {{ state_attr("sensor.waze_next_trip_distance", "distance") != None }}
      #   state: >-
      #     {{ state_attr("sensor.waze_next_trip_distance", "distance") | int }}

########################
# Zone
########################
zone:
