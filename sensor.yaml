- platform: darksky
  api_key: !secret darksky_api_key
  monitored_conditions:
    - summary
    - precip_type
    - precip_intensity
    - temperature
    - apparent_temperature
#  - dew_point
#  - wind_speed
#  - wind_bearing
    - cloud_cover
    - humidity
#  - pressure
#  - visibility
#  - ozone

- platform: mqtt
  state_topic: "sensor/temperature"
  name: "ESP8266 Temperature"
  unit_of_measurement: "ÂºF"
#  value_template: '{{ value_json.temp }}'

- platform: mqtt
  state_topic: "sensor/humidity"
  name: "ESP8266 Humidity"
  unit_of_measurement: "%"
#  value_template: '{{ value_json.humidity }}'

- platform: nest
  monitored_conditions:
    - 'temperature'
    - 'target'
    - 'humidity'

- platform: time_date
  display_options:
    - time

##Turn the direction of travel into a sensor which I can use in my automations
##Since sensors have a last changed timestamp.
- platform: template
  sensors:
    heading_spcc:
      value_template: '{{ states.proximity.spcc.attributes.dir_of_travel |default("unknown") }}'
      friendly_name: 'Direction of SPCC'
    heading_occ:
      value_template: '{{ states.proximity.occ.attributes.dir_of_travel |default("unknown") }}'
      friendly_name: 'Direction of OCC'
    heading_home:
      value_template: '{{ states.proximity.home.attributes.dir_of_travel |default("unknown") }}'
      friendly_name: 'Direction of Home'
    test_home:
      value_template: >
        {% if
          ((as_timestamp(now()) - as_timestamp(states.sensor.heading_spcc.last_changed) < 1200) and states.sensor.heading_spcc.state=="away_from")
          or
          ((as_timestamp(now()) - as_timestamp(states.sensor.heading_occ.last_changed) < 600) and states.sensor.heading_occ.state=="away_from")
        %} True
        {% else %}
          False
        {% endif %}
      friendly_name: 'Test for heading home'
    test_homeward:
      value_template: >
        {% if
          ((as_timestamp(now()) - as_timestamp(states.sensor.heading_home.last_changed) < 900) and states.sensor.heading_home.state=="toward")
        %} True
        {% else %}
          False
        {% endif %}
      friendly_name: "Homeward bound"


