- alias: Turn on lights at night when I get home
  trigger:
    - platform: state
      entity_id: input_boolean.home
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
  action:
    - service: scene.turn_on
      entity_id: scene.arrive_home
    - service: notify.telegram
      data:
        message: Arriving home. Turning on nighttime arrival.
    - service: notify.ios_wethop
      data:
        message: Home again, home again, jiggity jig.

- alias: Turn on bedroom lights at night when I get home
  trigger:
    - platform: state
      entity_id: input_boolean.home
      from: 'off'
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: time
        after: '22:00:00'
      - condition: sun
        before: 'sunrise'
  action:
    - service: scene.turn_on
      entity_id: scene.bedroom_prep

- alias: (New) Arrive at work
  trigger:
    - platform: zone
      entity_id: device_tracker.wethop
      zone: zone.work
      event: enter
  action:
    - service: climate.set_away_mode
      data:
          entity_id: climate.hallway_glycol
          away_mode: true
    - service: notify.telegram
      data:
        message: (New) Arriving at work. Setting Nest Away.
    - service: notify.ios_wethop
      data:
        message: (New) Arriving at work. Setting Nest Away.

- alias: Arrive home
  trigger:
    - platform: state
      entity_id: binary_sensor.bayesian_zeke_home
      from: off
      to: on
#      entity_id: device_tracker.wethop, device_tracker.4098ad3265d4
#      from: 'not_home'
#      to: 'home'
  action:
    - service: input_boolean.turn_on
      data:  
        entity_id: input_boolean.home

- alias: Leave home
  trigger:
    - platform: state
      entity_id: device_tracker.wethop, device_tracker.4098ad3265d4
      from: 'home'
      to: 'not_home'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.home

- alias: Leave for curling
  trigger:
    - platform: state
      entity_id: device_tracker.wethop, device_tracker.4098ad3265d4
      from: 'home'
      to: 'not_home'
  condition: 
    condition: time
    after: '18:00:00'
    before: '19:45:00'
    weekday:
      - tue
      - wed
  action:
    - service: climate.set_away_mode
      data:
        entity_id: climate.hallway_glycol
        away_mode: true

- alias: Turn off lights when I leave
  trigger:
    - platform: state
      entity_id: input_boolean.home
      from: 'on'
      to: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.leave_home
    - service: notify.telegram
      data:
        message: Leaving home. Turning everything off.
    - service: notify.ios_wethop
      data:
        message: Auf weidersehen!


- alias: Cloudy Day Arrival
  trigger:
    - platform: state
      entity_id: input_boolean.home
      from: 'off'
      to: 'on'
  condition:
   condition: and
   conditions:
      - condition: sun
        before: sunset
        before_offset: '01:00:00'
      - condition: numeric_state
        entity_id: sensor.dark_sky_cloud_coverage
        above: 50
  action:
    - service: scene.turn_on
      entity_id: scene.cloudy_arrive_home
    - service: notify.telegram
      data:
        message: Cloudy day arrival.
    - service: notify.ios_wethop
      data:
        message: Cloudy arrival.



- alias: On Vacation trigger
  trigger:
    - platform: state
      entity_id: input_boolean.home
      to: 'off'
      for:
        hours: 20
  condition:
    - condition: state
      entity_id: input_boolean.vacation
      state: 'off'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.vacation
    - service: notify.telegram
      data:
        message: Setting you as on vacation.
    - service: notify.ios_wethop
      data:
        message: On vacation.

- alias: On Vacation off
  trigger:
    - platform: state
      entity_id: input_boolean.home
      to: 'on'
      for:
        minutes: 2
  condition:
      - condition: state
        entity_id: input_boolean.vacation
        state: 'on'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.vacation
    - service: notify.telegram
      data:
        message: Setting you as back from vacation.
    - service: notify.ios_wethop
      data:
        message: Back from vacation.


- alias: Turn on lights when I am away
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:30:00'
  condition:
      - condition: state
        entity_id: input_boolean.vacation
        state: 'on'
  action:
    - delay: '00:{{ (range(5,45)|random|int) }}:00'
    - service: scene.turn_on
      data_template:
        entity_id: 'scene.vacation_group_{{ (range(1,4)|random|int) }}'
      # entity_id: scene.arrive_home
    - service: notify.telegram
      data:
        message: Turning on lights while you're away.
    - service: notify.ios_wethop
      data:
        message: Turn on lights while you're away.

- alias: Turn off lights at night when I am away
  trigger:
    - platform: template
      value_template: "{{ is_state('sensor.time', states('input_number.random_hour')|int ~ ':' ~ states('input_number.random_minute')|int) }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.vacation
        state: 'on'
#    - platform: time
#      after: '23:45:00'
  action:
    - service: scene.turn_on
      entity_id: scene.leave_home
    - service: notify.telegram
      data:
        message: Lights off while you're away.
    - service: notify.ios_wethop
      data:
        message: Turn off lights while you're away.


- alias: New return home from Twin Cities
  trigger:
    - platform: zone
      entity_id: device_tracker.wethop
      zone: zone.twincities
      event: leave
  condition:
    condition: template
    value_template: '{{ states.binary_sensor.test_homeward.state == "on" }}'
  action:
    - service: climate.set_away_mode
      data:
          entity_id: climate.hallway_glycol
          away_mode: false
    - service: notify.telegram
      data:
        message: (New) You're driving home from curling.  Turning off Nest Away.
    - service: notify.ios_wethop
      data:
        message: (New) Turn off Nest away while you drive home from curling.

- alias: New return home OCC
  trigger:
    - platform: zone
      entity_id: device_tracker.wethop
      zone: zone.occ
      event: leave
  condition:
    condition: time
    weekday:
      - sun
      - tue
  action:
    - service: climate.set_away_mode
      data:
          entity_id: climate.hallway_glycol
          away_mode: false
    - service: notify.telegram
      data:
        message: (New) You're driving home from curling.  Turning off Nest Away.
    - service: notify.ios_wethop
      data:
        message: (New) Turn off Nest away while you drive home from curling.




#- alias: Return home from SPCC and OCC
#  trigger:
#    - platform: state
#      entity_id: binary_sensor.test_homeward, binary_sensor.away_from_curling
#      to: 'on'
#  condition:
#    condition: template
#    value_template: '{{ states.binary_sensor.away_from_curling.state == "on" and states.binary_sensor.test_homeward.state == "on" }}'
#  action:
#    - service: climate.set_away_mode
#      data:
#          entity_id: climate.hallway_glycol
#          away_mode: false
#    - service: notify.telegram
#      data:
#        message: You're driving home from curling.  Turning off Nest Away..
#    - service: notify.ios_wethop
#      data:
#        message: Turn off Nest away while you drive home from curling.


- alias: Close forgotten garage door
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      to: 'open'
#      for:
#        hours: 1
#        minutes: 30
  condition:
    - condition: time
      after: '23:30:00'
  action:
    - service: notify.telegram
      data:
        message: Garage door left open. Close it.
    - service: notify.ios_wethop
      data:
        message: Close the garage door.
# This does not work due to chamberlain limitations.  https://home-assistant.io/components/cover.wink/
#    - service: cover.close_cover
#      entity_id: cover.garage_door_opener.

- alias: Set random turn off time
  trigger:
    - platform: time
      at: '21:00:00'
    - platform: homeassistant
      event: start
  condition:
      - condition: state
        entity_id: input_boolean.vacation
        state: 'on' 
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.random_hour
        # The endpoint is omitted, see: http://jinja.pocoo.org/docs/dev/templates/#range
        value: '{{ (range(22, 24)|random|int) }}'
    - service: input_number.set_value
      data_template:
        entity_id: input_number.random_minute
        value: '{{ (range(30, 50)|random|int) }}'
    - service: notify.telegram
      data:
        message: 'Turning off lights at {{ states("input_number.random_hour")|int }}:{{states("input_number.random_minute")|int}}'

- alias: "Update Available"
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.telegram
      data:
        message: 'Update for Home Assistant is available.'
    - service: notify.ios_wethop
      data:
        message: Update available for HASS.

- alias: "The Walking Dead"
  trigger:
    platform: state
    entity_id: media_player.directv_rid036071639219
  condition:
    - condition: template
      value_template: >
        {% if states.media_player.directv_rid036071639219.attributes.media_title == "The Walking Dead" %}
          true
        {% else %}
          false
        {% endif %}
  action:
    service: scene.turn_on
    entity_id: scene.twd

- alias: Turn on Christmas Tree
  initial_state: False
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:45:00'
  action:
    - service: homeassistant.turn_on
      entity_id: switch.christmas_tree, light.christmas_lights
    - service: notify.telegram
      data:
        message: Turning on Christmas Tree.

- alias: Turn off Christmas Tree
  initial_state: False
  trigger:
    - platform: time
      at: '00:00:00'
  action:
    - service: homeassistant.turn_off
      entity_id: switch.christmas_tree, light.christmas_lights
    - service: notify.telegram
      data:
        message: Turning off Christmas Tree.

- alias: Turn off Christmas Tree if bedroom lights turned off.
  initial_state: False
  trigger:
    - platform: state
      entity_id: light.bedroom_lamp, light.bedroom_lamp_2
      to: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id: switch.christmas_tree, light.christmas_lights

- alias: Get location on restart of HASS
  initial_state: True
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: device_tracker.see
    data: 
      dev_id: wethop
  - service: notify.ios_wethop
    data:
      message: "request_location_update"
