- id: home_night_arrival
  alias: Turn on lights at night when I get home
  trigger:
  - platform: state
    entity_id: input_boolean.home
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: sun
      after: sunset
  action:
  - service: scene.turn_on
    entity_id: scene.arrive_home
  - service: notify.telegram
    data:
      message: Arriving home. Turning on nighttime arrival.
  - service: notify.ios_wethop
    data:
      message: Home again, home again, jiggity jig.
  - service: vacuum.return_to_home
- id: master_bedroom_night_arrival
  alias: Turn on bedroom lights at night when I get home
  trigger:
  - platform: state
    entity_id: input_boolean.home
    from: 'off'
    to: 'on'
  condition:
    condition: or
    conditions:
    - condition: time
      after: '22:00:00'
    - condition: sun
      before: sunrise
  action:
  - service: scene.turn_on
    entity_id: scene.bedroom_prep
- id: arrive_at_work
  alias: Arrive at work
  trigger:
  - entity_id: device_tracker.wethop
    event: enter
    platform: zone
    zone: zone.work
  action:
  - data:
      away_mode: true
      entity_id: climate.hallway_glycol
    service: climate.set_away_mode
  - data:
      message: ' Arriving at work. Setting Nest Away.'
    service: notify.ios_wethop
- id: arrive_home_update_input_boolean
  alias: Arrive home
  trigger:
  - platform: state
    entity_id: binary_sensor.bayesian_zeke_home
    from: 'off'
    to: 'on'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.home
- id: leave_home_update_input_boolean
  alias: Leave home
  trigger:
  - platform: state
    entity_id: binary_sensor.bayesian_zeke_home
    from: 'on'
    to: 'off'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.home
  - service: vacuum.turn_on
- id: leave_home_for_curling
  alias: Leave for curling
  trigger:
  - platform: state
    entity_id: binary_sensor.bayesian_zeke_home
    from: 'off'
    to: 'on'
  condition:
    condition: time
    after: '17:00:00'
    before: '19:45:00'
    weekday:
    - tue
    - wed
  action:
  - service: climate.set_away_mode
    data:
      entity_id: climate.hallway_glycol
      away_mode: true
  - service: notify.ios_wethop
    data:
      message: Good Curling!
- id: lurn_off_lights_when_leaving
  alias: Turn off lights when I leave
  trigger:
  - platform: state
    entity_id: input_boolean.home
    from: 'on'
    to: 'off'
  action:
  - service: scene.turn_on
    entity_id: scene.leave_home
  - service: notify.telegram
    data:
      message: Leaving home. Turning everything off.
  - service: notify.ios_wethop
    data:
      message: Auf weidersehen!
- id: cloudy_home_arrival
  alias: Cloudy Day Arrival
  trigger:
  - platform: state
    entity_id: input_boolean.home
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: sun
      before: sunset
      before_offset: 01:00:00
    - condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 50
  action:
  - service: scene.turn_on
    entity_id: scene.cloudy_arrive_home
  - service: notify.telegram
    data:
      message: Cloudy day arrival.
  - service: notify.ios_wethop
    data:
      message: Cloudy arrival.
- id: on_vacation_trigger
  alias: On Vacation trigger
  trigger:
  - platform: state
    entity_id: input_boolean.home
    to: 'off'
    for:
      hours: 20
  condition:
  - condition: state
    entity_id: input_boolean.vacation
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.vacation
  - service: notify.telegram
    data:
      message: Setting you as on vacation.
  - service: notify.ios_wethop
    data:
      message: On vacation.
- id: off_vacation_trigger
  alias: On Vacation off
  trigger:
  - platform: state
    entity_id: input_boolean.home
    to: 'on'
    for:
      minutes: 2
  condition:
  - condition: state
    entity_id: input_boolean.vacation
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.vacation
  - service: notify.telegram
    data:
      message: Setting you as back from vacation.
  - service: notify.ios_wethop
    data:
      message: Back from vacation.
- id: vacation_lights_on
  alias: Turn on lights when I am away
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
  condition:
  - condition: state
    entity_id: input_boolean.vacation
    state: 'on'
  action:
  - delay: 00:{{ (range(5,45)|random|int) }}:00
  - service: scene.turn_on
    data_template:
      entity_id: scene.vacation_group_{{ (range(1,4)|random|int) }}
  - service: notify.telegram
    data:
      message: Turning on lights while you're away.
  - service: notify.ios_wethop
    data:
      message: Turn on lights while you're away.
- id: vacation_lights_off
  alias: Turn off lights at night when I am away
  trigger:
  - platform: template
    value_template: '{{ is_state(''sensor.time'', states(''input_number.random_hour'')|int
      ~ '':'' ~ states(''input_number.random_minute'')|int) }}'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.vacation
      state: 'on'
  action:
  - service: scene.turn_on
    entity_id: scene.leave_home
  - service: notify.telegram
    data:
      message: Lights off while you're away.
  - service: notify.ios_wethop
    data:
      message: Turn off lights while you're away.
- id: return_home_from_cities
  alias: Return home from Twin Cities
  trigger:
  - platform: zone
    entity_id: device_tracker.wethop
    zone: zone.twincities
    event: leave
  condition:
    condition: template
    value_template: '{{ states.binary_sensor.test_homeward.state == "on" }}'
  action:
  - service: climate.set_away_mode
    data:
      entity_id: climate.hallway_glycol
      away_mode: false
  - service: notify.telegram
    data:
      message: (New) You're driving home from curling.  Turning off Nest Away.
  - service: notify.ios_wethop
    data:
      message: (New) Turn off Nest away while you drive home from curling.
- id: return_home_from_OCC
  alias: Return home from OCC
  trigger:
  - platform: zone
    entity_id: device_tracker.wethop
    zone: zone.occ
    event: leave
  condition:
    condition: time
    weekday:
    - sun
    - tue
  action:
  - service: climate.set_away_mode
    data:
      entity_id: climate.hallway_glycol
      away_mode: false
  - service: notify.telegram
    data:
      message: (New) You're driving home from curling.  Turning off Nest Away.
  - service: notify.ios_wethop
    data:
      message: (New) Turn off Nest away while you drive home from curling.
- id: garage_door_reminder
  alias: Close forgotten garage door
  trigger:
  - platform: state
    entity_id: cover.garage_door_opener
    to: open
  condition:
  - condition: time
    after: '23:30:00'
  action:
  - service: notify.telegram
    data:
      message: Garage door left open. Close it.
  - service: notify.ios_wethop
    data:
      message: Close the garage door.
- id: random_off_time
  alias: Set random turn off time
  trigger:
  - platform: time
    at: '21:00:00'
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.vacation
    state: 'on'
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.random_hour
      value: '{{ (range(22, 24)|random|int) }}'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.random_minute
      value: '{{ (range(30, 50)|random|int) }}'
  - service: notify.telegram
    data:
      message: Turning off lights at {{ states("input_number.random_hour")|int }}:{{states("input_number.random_minute")|int}}
- id: update_hass
  alias: Update Available
  trigger:
    platform: state
    entity_id: updater.updater
  action:
  - service: notify.telegram
    data:
      message: Update for Home Assistant is available.
  - service: notify.ios_wethop
    data:
      message: Update available for HASS.
- id: twd
  alias: The Walking Dead
  trigger:
    platform: state
    entity_id: media_player.directv_rid036071639219
  condition:
  - condition: template
    value_template: "{% if states.media_player.directv_rid036071639219.attributes.media_title\
      \ == \"The Walking Dead\" %}\n  true\n{% else %}\n  false\n{% endif %}\n"
  action:
    service: scene.turn_on
    entity_id: scene.twd
- id: christmas_tree_on
  alias: Turn on Christmas Tree
  initial_state: false
  trigger:
  - platform: sun
    event: sunset
    offset: -00:45:00
  action:
  - service: homeassistant.turn_on
    entity_id: switch.christmas_tree, light.christmas_lights
  - service: notify.telegram
    data:
      message: Turning on Christmas Tree.
- id: christmas_tree_off_midnight
  alias: Turn off Christmas Tree
  initial_state: false
  trigger:
  - platform: time
    at: 00:00:00
  action:
  - service: homeassistant.turn_off
    entity_id: switch.christmas_tree, light.christmas_lights
  - service: notify.telegram
    data:
      message: Turning off Christmas Tree.
- id: christmas_lights_off_bedroom_off
  alias: Turn off Christmas Tree if bedroom lights turned off.
  initial_state: false
  trigger:
  - platform: state
    entity_id: light.bedroom_lamp, light.bedroom_lamp_2
    to: 'off'
  action:
  - service: homeassistant.turn_off
    entity_id: switch.christmas_tree, light.christmas_lights
- id: update_ios_on_restart
  alias: Get location on restart of HASS
  initial_state: true
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: device_tracker.see
    data:
      dev_id: wethop
  - service: notify.ios_wethop
    data:
      message: request_location_update
- id: vacuum_flying_home
  action:
  - service: vacuum.turn_on
  alias: Vacuum house when flying home
  condition: []
  trigger:
  - entity_id: calendar.flight_to_msp_today
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: calendar.flight_to_rst_today
    from: 'off'
    platform: state
    to: 'on'
